#pragma once

#define MSP_CMD_OSD_CONFIG 84
#define MSP_CMD_FILTER_CONFIG 92
#define MSP_CMD_PID_ADVANCED 94
#define MSP_CMD_STATUS_EX 150
#define MSP_CMD_RTC 247

#include <stdint.h>
#include "OSD_POS.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_API_VERSION = 1
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define NONO_MSP_PROTOCOL_VERSION                0
#define NONO_API_VERSION_MAJOR                   1
#define NONO_API_VERSION_MINOR                   42

struct nono_msp_api_version {
  uint8_t proto;
  uint8_t major;
  uint8_t minor;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_FC_VARIANT = 2
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define NONO_ARDUPILOT_IDENTIFIER "ARDU"
#define NONO_FLIGHT_CONTROLLER_IDENTIFIER_LENGTH 4

struct nono_msp_fc_variant {
  char flightControlIdentifier[5];
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_FC_VERSION = 3
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define NONO_FC_VERSION_MAJOR            4
#define NONO_FC_VERSION_MINOR            2
#define NONO_FC_VERSION_PATCH_LEVEL      0

struct nono_msp_fc_version {
  uint8_t major;
  uint8_t minor;
  uint8_t patch;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_BOARD_INFO = 4
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define NONO_BOARD_IDENTIFIER "ARDU"
#define NONO_BOARD_IDENTIFIER_LENGTH 4
#define NONO_ACTIVE_FWSTR "ArduRover V4.6.0-dev"

struct nono_msp_board_details {
  uint16_t hw_revision;
  uint8_t aio_flags;
  uint8_t capabilities;
  uint8_t fw_string_len;
} __attribute__ ((packed));

struct nono_msp_board_info {
  char boardIdentifier[5];
  nono_msp_board_details details;
  char fw_string[64];
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_BUILD_INFO = 5
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define NONO_BUILD_DATE_LENGTH     11U
#define NONO_BUILD_TIME_LENGTH     8U
#define NONO_GIT_SHORT_REVISION_LENGTH     8U

#define NONO_BUILD_DATE "Jan 01 1980"
#define NONO_BUILD_TIME "00:00:00"
#define NONO_BUILD_FW_HASH_STR ""

struct nono_msp_build_info {
  char nono_msp_build_date[NONO_BUILD_DATE_LENGTH + 1];
  char nono_msp_build_time[NONO_BUILD_TIME_LENGTH + 1];
  char nono_msp_fw_hash_str[NONO_GIT_SHORT_REVISION_LENGTH + 1];
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_NAME = 10
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define MSP_TXT_BUFFER_SIZE     15U

struct nono_msp_name {
  char identifier[MSP_TXT_BUFFER_SIZE];
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_OSD_CONFIG = 84
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_osd_config {
    uint8_t flags;
    uint8_t video_system;
    uint8_t units;
    uint8_t rssi_alarm;
    uint16_t capacity_alarm;
    uint8_t unused_0;
    uint8_t item_count;
    uint16_t alt_alarm;
    uint16_t items_position[OSD_ITEM_COUNT];
    uint8_t stats_items_count;
    uint16_t stats_items[OSD_STAT_COUNT];
    uint8_t timers_count;
    uint16_t timers[OSD_TIMER_COUNT];
    uint16_t enabled_warnings_old;
    uint8_t warnings_count_new;
    uint32_t enabled_warnings_new;
    uint8_t available_profiles;
    uint8_t selected_profile;
    uint8_t osd_stick_overlay;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_STATUS = 101
/// MSP_STATUS_EX = 150
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_status {
    uint16_t task_delta_time;
    uint16_t i2c_error_count;
    uint16_t sensor_status;
    uint32_t flight_mode_flags;
    uint8_t pid_profile;
    uint16_t system_load;
    uint16_t gyro_cycle_time;
    uint8_t box_mode_flags;
    uint8_t arming_disable_flags_count;
    uint32_t arming_disable_flags;
    uint8_t extra_flags;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_RAW_GPS = 106
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_raw_gps {
    uint8_t fix_type;
    uint8_t num_sats;
    int32_t lat;
    int32_t lon;
    uint16_t alt_m;
    uint16_t speed_cms;
    int16_t ground_course_cd;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_COMP_GPS = 107
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_comp_gps {
    uint16_t dist_home_m;
    uint16_t home_angle_deg;
    uint8_t toggle_gps;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_ATTITUDE = 108
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_attitude {
    int16_t roll;
    int16_t pitch;
    int16_t yaw;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_ALTITUDE = 109
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_altitude {
    int32_t rel_altitude_cm;
    int16_t vspeed_cms;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_ANALOG = 110
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_analog {
    uint8_t voltage_dv;
    uint16_t mah;
    uint16_t rssi;
    int16_t current_ca;
    uint16_t voltage_cv;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_BATTERY_STATE = 130
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_battery_state {
    uint8_t cellcount;
    uint16_t capacity_mah;
    uint8_t voltage_dv;
    uint16_t mah;
    int16_t current_ca;
    uint8_t state;
    uint16_t voltage_cv;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_UID = 160
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define MSP_UID_BUFFER_SIZE     12U

struct nono_msp_uuid {
  uint8_t uuid[MSP_UID_BUFFER_SIZE];
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_ESC_SENSOR_DATA = 134
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_esc_sensor_data {
    uint8_t temp;
    uint16_t rpm;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_RTC = 247
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_rtc {
    uint16_t year;
    uint8_t mon;
    uint8_t mday;
    uint8_t hour;
    uint8_t min;
    uint8_t sec;
    uint16_t millis;
} __attribute__ ((packed));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// MSP_RC = 105
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct nono_msp_rc {
    uint16_t a;
    uint16_t e;
    uint16_t r;
    uint16_t t;
} __attribute__ ((packed));